{{ ansible_managed | comment }}
#
# /etc/systemd/system/bluetooth.service.d/hardening.conf
#
# https://github.com/krathalan/systemd-sandboxing/blob/master/bluetooth.service.d/hardening.conf
# Exposure 6.9 -> 2.0
# https://github.com/bluez/bluez/blob/master/src/bluetooth.service.in
[Service]
##############
# Networking #
##############

# PrivateNetwork= service needs access to system network
RestrictAddressFamilies=AF_UNIX AF_BLUETOOTH
IPAddressDeny=any

###############
# File system #
###############
#  Note that the effect of these settings may be undone by privileged processes. In order to
#  set up an effective sandboxed environment for a unit it is thus recommended to combine
#  these settings with either CapabilityBoundingSet=~CAP_SYS_ADMIN or
#  SystemCallFilter=~@mount.

# ProtectHome=yes already specified in packaged unit file
ProtectSystem=strict
ReadWritePaths=/var/lib/bluetooth
PrivateTmp=yes

###################
# User separation #
###################

# PrivateUsers= service runs as root
# DynamicUser= service runs as root

###########
# Devices #
###########

# PrivateDevices= service needs access to hardware devices
DevicePolicy=closed
DeviceAllow=/dev/rfkill rw
DeviceAllow=/dev/uinput rw

##########
# Kernel #
##########

ProtectKernelTunables=yes
ProtectKernelModules=yes
{% if (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 20) or
      (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 8 ) or
      (ansible_distribution == 'Debian' and ansible_distribution_release == 'NA')
%}
ProtectKernelLogs=yes
ProtectHostname=yes
ProtectClock=yes
{% endif %}

########
# Misc #
########

# CapabilityBoundingSet= already specified in packaged unit file
# AmbientCapabilities= service runs as root
NoNewPrivileges=yes
ProtectControlGroups=yes
RestrictNamespaces=yes
LockPersonality=yes
MemoryDenyWriteExecute=yes
RestrictRealtime=yes
RestrictSUIDSGID=yes
# RemoveIPC= service runs as root

################
# System calls #
################

{% if (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 8) or
      (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 20) or
      (ansible_distribution == 'Debian' and ansible_distribution_release == 'NA')
%}
SystemCallFilter=@system-service
{% endif %}
SystemCallFilter=~@resources @privileged
SystemCallArchitectures=native

CPUShares={{ bluetooth_cgroups_cpushares | default('1024') }}
CPUQuota={{ bluetooth_cgroups_cpuquota | default('20%') }}
MemoryLimit={{ bluetooth_cgroups_memorylimit | default('1G') }}
