{{ ansible_managed | comment }}
#
# /etc/systemd/system/postgresql@.service.d/security.conf
#
# Existing exposure level: 9.6 (ubuntu 20.04) -> 1.8
[Service]
User=postgres
Group=postgres

# Reduce Attack Surface
NoNewPrivileges=yes
PrivateTmp=yes
ProtectSystem=full
# ProtectSystem=strict
ProtectHome=yes
{% if (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 21) or
      (ansible_distribution == 'Debian' and ansible_distribution_major_version|int >= 11)
%}
ProtectProc=noaccess
{% endif %}

PrivateDevices=yes
DeviceAllow=

# PrivateUsers=yes

UMask=077

InaccessiblePaths=/proc

ProtectKernelTunables=true
ProtectKernelModules=yes
ProtectKernelLogs=yes
ProtectHostname=yes
ProtectClock=yes

ProtectControlGroups=true
LockPersonality=true
RestrictRealtime=true
RestrictNamespaces=yes
ProtectKernelLogs=yes
# RestrictNamespaces=~CLONE_NEWCGROUP CLONE_NEWIPC CLONE_NEWNET CLONE_NEWPID
RestrictSUIDSGID=yes
MemoryDenyWriteExecute=yes
RemoveIPC=yes

# PrivateNetwork=yes
RestrictAddressFamilies=AF_UNIX AF_INET AF_INET6
RestrictAddressFamilies=~AF_NETLINK AF_PACKET

IPAccounting=yes
# Database should not be exposed directly to Internet
# Ideally behind frontend or jumphost
# And if connecting to Internet, through an internal proxy
IPAddressAllow=localhost link-local multicast 10.0.0.0/8 192.168.0.0/16

CapabilityBoundingSet=~CAP_AUDIT_CONTROL CAP_AUDIT_READ CAP_DAC_READ_SEARCH
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_PTRACE
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_NET_BIND_SERVICE CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_SYS_NICE CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_MODULE
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_SYS_ADMIN
CapabilityBoundingSet=~CAP_SETUID CAP_SETGID
CapabilityBoundingSet=~CAP_SETPCAP
CapabilityBoundingSet=~CAP_CHOWN
CapabilityBoundingSet=~CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_NET_RAW
CapabilityBoundingSet=~CAP_IPC_LOCK

{% if not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )
%}
SystemCallFilter=@system-service
{% endif %}
SystemCallFilter=~@debug @mount @cpu-emulation @obsolete @resources @reboot @swap @raw-io @module @privileged
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM
SystemCallArchitectures=native

CPUWeight={{ tomcat_cgroups_cpushares | default('1024') }}
CPUQuota={{ tomcat_cgroups_cpuquota | default('80%') }}
MemoryMax={{ tomcat_cgroups_memorylimit | default('4G') }}
