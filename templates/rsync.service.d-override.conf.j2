{{ ansible_managed | comment }}
#
# /etc/systemd/system/rsync.service.d/hardening.conf
#
# Mobian: default enabled but conditional to /etc/rsyncd.conf which does not exist initially
# Tested with /usr/share/doc/rsync/examples/rsyncd.conf
# Alternate setup: use systemd User= which removes need for setuid/setgid, prevent chroot but ProtectSystem/Home
# Note:
# 	'rsync: [receiver] mkstemp "/.dmesg.out.6fQQRq" (in ftp) failed: Permission denied (13)'
# 	= check that rsync user has write access to target rsync dir
# Exposure 8.5 -> 2.2
[Service]
# Default in upstream unit
# Citing README.md:
#
#   [...] Using ssh is recommended for its security features.
#
#   Alternatively, rsync can run in `daemon' mode, listening on a socket.
#   This is generally used for public file distribution, [...]
#
# So let's assume some extra security is more than welcome here. We do full
# system protection (which makes /usr, /boot, & /etc read-only) and hide
# devices. To override these defaults, it's best to do so in the drop-in
# directory, often done via `systemctl edit rsync.service`. The file needs
# just the bare minimum of the right [heading] and override values.
# See systemd.unit(5) and search for "drop-in" for full details.

ProtectSystem=full
#ProtectHome=on|off|read-only
ProtectHome=on
{% if (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 21) or
      (ansible_distribution == 'Debian' and ansible_distribution_release == 'NA')
%}
ProtectProc=ptraceable
{% endif %}
PrivateDevices=on
NoNewPrivileges=on

# PrivateNetwork=yes
RestrictAddressFamilies=AF_INET AF_INET6
IPAccounting=yes
IPAddressAllow=localhost link-local multicast 10.0.0.0/8 192.168.0.0/16
# IPAddressDeny= service needs access to all IPs

# This is likely needed only if rsync root overlaps a protected path (home/system)
# ReadOnlyPaths=/path/to/rsync/root
# ReadWritePaths=/path/to/rsync/root
PrivateTmp=yes

# PrivateUsers=yes
# DynamicUser=
# User=nobody

ProtectKernelTunables=yes
ProtectKernelModules=yes
{% if (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int >= 20) or
      (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 8 ) or
      (ansible_distribution == 'Debian' and ansible_distribution_release == 'NA')
%}
ProtectKernelLogs=yes
ProtectHostname=yes
ProtectClock=yes
{% endif %}

UMask=077
# CapabilityBoundingSet=~CAP_SETUID CAP_SETGID CAP_SETPCAP
CapabilityBoundingSet=~CAP_SETPCAP
CapabilityBoundingSet=~CAP_SYS_ADMIN
CapabilityBoundingSet=~CAP_SYS_PTRACE
CapabilityBoundingSet=~CAP_CHOWN CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_NET_BIND_SERVICE CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_SYS_NICE CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_MODULE
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
# CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_SETUID CAP_SETGID CAP_SETPCAP
CapabilityBoundingSet=~CAP_CHOWN CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_NET_RAW
CapabilityBoundingSet=~CAP_IPC_LOCK

# AmbientCapabilities=

ProtectControlGroups=yes
RestrictNamespaces=yes
LockPersonality=yes
MemoryDenyWriteExecute=yes
RestrictRealtime=yes
RestrictSUIDSGID=yes
# RemoveIPC=

{% if (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 8) or
      (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 20) or
      (ansible_distribution == 'Debian' and ansible_distribution_release == 'NA')
%}
SystemCallFilter=@system-service @privileged @mount
{% endif %}
SystemCallFilter=~@clock @debug @resources @reboot @swap @module
SystemCallArchitectures=native

CPUWeight={{ rsync_cgroups_cpushares | default('1024') }}
CPUQuota={{ rsync_cgroups_cpuquota | default('20%') }}
MemoryMax={{ rsync_cgroups_memorylimit | default('1G') }}
